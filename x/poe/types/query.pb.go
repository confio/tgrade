// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: confio/poe/v1beta1/query.proto

package types

import (
	context "context"
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"

	types "github.com/cosmos/cosmos-sdk/types"
	query "github.com/cosmos/cosmos-sdk/types/query"
	types1 "github.com/cosmos/cosmos-sdk/x/staking/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/durationpb"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// QueryContractAddressRequest is the request type for the Query/ContractAddress
// RPC method.
type QueryContractAddressRequest struct {
	// ContractType is the type of contract
	ContractType PoEContractType `protobuf:"varint,1,opt,name=contract_type,json=contractType,proto3,enum=confio.poe.v1beta1.PoEContractType" json:"contract_type,omitempty"`
}

func (m *QueryContractAddressRequest) Reset()         { *m = QueryContractAddressRequest{} }
func (m *QueryContractAddressRequest) String() string { return proto.CompactTextString(m) }
func (*QueryContractAddressRequest) ProtoMessage()    {}
func (*QueryContractAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_55a2242dcc0e0cfb, []int{0}
}
func (m *QueryContractAddressRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryContractAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryContractAddressRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryContractAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryContractAddressRequest.Merge(m, src)
}
func (m *QueryContractAddressRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryContractAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryContractAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryContractAddressRequest proto.InternalMessageInfo

// QueryContractAddressRequest is the response type for the
// Query/ContractAddress RPC method.
type QueryContractAddressResponse struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *QueryContractAddressResponse) Reset()         { *m = QueryContractAddressResponse{} }
func (m *QueryContractAddressResponse) String() string { return proto.CompactTextString(m) }
func (*QueryContractAddressResponse) ProtoMessage()    {}
func (*QueryContractAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_55a2242dcc0e0cfb, []int{1}
}
func (m *QueryContractAddressResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryContractAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryContractAddressResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryContractAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryContractAddressResponse.Merge(m, src)
}
func (m *QueryContractAddressResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryContractAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryContractAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryContractAddressResponse proto.InternalMessageInfo

func (m *QueryContractAddressResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// QueryUnbondingPeriodRequest is request type for the Query/UnbondingPeriod RPC
// method
type QueryUnbondingPeriodRequest struct {
}

func (m *QueryUnbondingPeriodRequest) Reset()         { *m = QueryUnbondingPeriodRequest{} }
func (m *QueryUnbondingPeriodRequest) String() string { return proto.CompactTextString(m) }
func (*QueryUnbondingPeriodRequest) ProtoMessage()    {}
func (*QueryUnbondingPeriodRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_55a2242dcc0e0cfb, []int{2}
}
func (m *QueryUnbondingPeriodRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryUnbondingPeriodRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryUnbondingPeriodRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryUnbondingPeriodRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryUnbondingPeriodRequest.Merge(m, src)
}
func (m *QueryUnbondingPeriodRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryUnbondingPeriodRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryUnbondingPeriodRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryUnbondingPeriodRequest proto.InternalMessageInfo

// QueryUnbondingPeriodResponse is response type for the Query/UnbondingPeriod
// RPC method
type QueryUnbondingPeriodResponse struct {
	// Time is the time that must pass
	Time time.Duration `protobuf:"bytes,1,opt,name=time,proto3,stdduration" json:"time"`
}

func (m *QueryUnbondingPeriodResponse) Reset()         { *m = QueryUnbondingPeriodResponse{} }
func (m *QueryUnbondingPeriodResponse) String() string { return proto.CompactTextString(m) }
func (*QueryUnbondingPeriodResponse) ProtoMessage()    {}
func (*QueryUnbondingPeriodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_55a2242dcc0e0cfb, []int{3}
}
func (m *QueryUnbondingPeriodResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryUnbondingPeriodResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryUnbondingPeriodResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryUnbondingPeriodResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryUnbondingPeriodResponse.Merge(m, src)
}
func (m *QueryUnbondingPeriodResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryUnbondingPeriodResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryUnbondingPeriodResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryUnbondingPeriodResponse proto.InternalMessageInfo

func (m *QueryUnbondingPeriodResponse) GetTime() time.Duration {
	if m != nil {
		return m.Time
	}
	return 0
}

// QueryValidatorDelegationRequest is request type for the
// Query/ValidatorDelegation RPC method
type QueryValidatorDelegationRequest struct {
	// validator_addr defines the validator address to query for.
	ValidatorAddr string `protobuf:"bytes,1,opt,name=validator_addr,json=validatorAddr,proto3" json:"validator_addr,omitempty"`
}

func (m *QueryValidatorDelegationRequest) Reset()         { *m = QueryValidatorDelegationRequest{} }
func (m *QueryValidatorDelegationRequest) String() string { return proto.CompactTextString(m) }
func (*QueryValidatorDelegationRequest) ProtoMessage()    {}
func (*QueryValidatorDelegationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_55a2242dcc0e0cfb, []int{4}
}
func (m *QueryValidatorDelegationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryValidatorDelegationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryValidatorDelegationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryValidatorDelegationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryValidatorDelegationRequest.Merge(m, src)
}
func (m *QueryValidatorDelegationRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryValidatorDelegationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryValidatorDelegationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryValidatorDelegationRequest proto.InternalMessageInfo

func (m *QueryValidatorDelegationRequest) GetValidatorAddr() string {
	if m != nil {
		return m.ValidatorAddr
	}
	return ""
}

// QueryValidatorDelegationResponse is response type for the
// Query/ValidatorDelegation RPC method
type QueryValidatorDelegationResponse struct {
	Balance types.Coin `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance"`
}

func (m *QueryValidatorDelegationResponse) Reset()         { *m = QueryValidatorDelegationResponse{} }
func (m *QueryValidatorDelegationResponse) String() string { return proto.CompactTextString(m) }
func (*QueryValidatorDelegationResponse) ProtoMessage()    {}
func (*QueryValidatorDelegationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_55a2242dcc0e0cfb, []int{5}
}
func (m *QueryValidatorDelegationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryValidatorDelegationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryValidatorDelegationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryValidatorDelegationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryValidatorDelegationResponse.Merge(m, src)
}
func (m *QueryValidatorDelegationResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryValidatorDelegationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryValidatorDelegationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryValidatorDelegationResponse proto.InternalMessageInfo

func (m *QueryValidatorDelegationResponse) GetBalance() types.Coin {
	if m != nil {
		return m.Balance
	}
	return types.Coin{}
}

// QueryValidatorUnbondingDelegationsRequest is required type for the
// Query/ValidatorUnbondingDelegations RPC method
type QueryValidatorUnbondingDelegationsRequest struct {
	// validator_addr defines the validator address to query for.
	ValidatorAddr string `protobuf:"bytes,1,opt,name=validator_addr,json=validatorAddr,proto3" json:"validator_addr,omitempty"`
	// pagination defines an optional pagination for the request.
	Pagination *query.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryValidatorUnbondingDelegationsRequest) Reset() {
	*m = QueryValidatorUnbondingDelegationsRequest{}
}
func (m *QueryValidatorUnbondingDelegationsRequest) String() string {
	return proto.CompactTextString(m)
}
func (*QueryValidatorUnbondingDelegationsRequest) ProtoMessage() {}
func (*QueryValidatorUnbondingDelegationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_55a2242dcc0e0cfb, []int{6}
}
func (m *QueryValidatorUnbondingDelegationsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryValidatorUnbondingDelegationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryValidatorUnbondingDelegationsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryValidatorUnbondingDelegationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryValidatorUnbondingDelegationsRequest.Merge(m, src)
}
func (m *QueryValidatorUnbondingDelegationsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryValidatorUnbondingDelegationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryValidatorUnbondingDelegationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryValidatorUnbondingDelegationsRequest proto.InternalMessageInfo

func (m *QueryValidatorUnbondingDelegationsRequest) GetValidatorAddr() string {
	if m != nil {
		return m.ValidatorAddr
	}
	return ""
}

func (m *QueryValidatorUnbondingDelegationsRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryValidatorUnbondingDelegationsResponse is response type for the
// Query/ValidatorUnbondingDelegations RPC method.
type QueryValidatorUnbondingDelegationsResponse struct {
	Entries []types1.UnbondingDelegationEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries"`
	// pagination defines the pagination in the response.
	Pagination *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryValidatorUnbondingDelegationsResponse) Reset() {
	*m = QueryValidatorUnbondingDelegationsResponse{}
}
func (m *QueryValidatorUnbondingDelegationsResponse) String() string {
	return proto.CompactTextString(m)
}
func (*QueryValidatorUnbondingDelegationsResponse) ProtoMessage() {}
func (*QueryValidatorUnbondingDelegationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_55a2242dcc0e0cfb, []int{7}
}
func (m *QueryValidatorUnbondingDelegationsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryValidatorUnbondingDelegationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryValidatorUnbondingDelegationsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryValidatorUnbondingDelegationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryValidatorUnbondingDelegationsResponse.Merge(m, src)
}
func (m *QueryValidatorUnbondingDelegationsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryValidatorUnbondingDelegationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryValidatorUnbondingDelegationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryValidatorUnbondingDelegationsResponse proto.InternalMessageInfo

func (m *QueryValidatorUnbondingDelegationsResponse) GetEntries() []types1.UnbondingDelegationEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *QueryValidatorUnbondingDelegationsResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryValidatorOutstandingRewardRequest is the request type for the
// Query/ValidatorOutstandingReward RPC method.
type QueryValidatorOutstandingRewardRequest struct {
	// validator_address defines the validator address to query for.
	ValidatorAddress string `protobuf:"bytes,1,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
}

func (m *QueryValidatorOutstandingRewardRequest) Reset() {
	*m = QueryValidatorOutstandingRewardRequest{}
}
func (m *QueryValidatorOutstandingRewardRequest) String() string { return proto.CompactTextString(m) }
func (*QueryValidatorOutstandingRewardRequest) ProtoMessage()    {}
func (*QueryValidatorOutstandingRewardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_55a2242dcc0e0cfb, []int{8}
}
func (m *QueryValidatorOutstandingRewardRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryValidatorOutstandingRewardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryValidatorOutstandingRewardRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryValidatorOutstandingRewardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryValidatorOutstandingRewardRequest.Merge(m, src)
}
func (m *QueryValidatorOutstandingRewardRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryValidatorOutstandingRewardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryValidatorOutstandingRewardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryValidatorOutstandingRewardRequest proto.InternalMessageInfo

func (m *QueryValidatorOutstandingRewardRequest) GetValidatorAddress() string {
	if m != nil {
		return m.ValidatorAddress
	}
	return ""
}

// QueryValidatorOutstandingRewardResponse is the response type for the
// Query/ValidatorOutstandingReward RPC method.
type QueryValidatorOutstandingRewardResponse struct {
	Reward types.DecCoin `protobuf:"bytes,1,opt,name=reward,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.DecCoin" json:"reward" yaml:"reward"`
}

func (m *QueryValidatorOutstandingRewardResponse) Reset() {
	*m = QueryValidatorOutstandingRewardResponse{}
}
func (m *QueryValidatorOutstandingRewardResponse) String() string { return proto.CompactTextString(m) }
func (*QueryValidatorOutstandingRewardResponse) ProtoMessage()    {}
func (*QueryValidatorOutstandingRewardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_55a2242dcc0e0cfb, []int{9}
}
func (m *QueryValidatorOutstandingRewardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryValidatorOutstandingRewardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryValidatorOutstandingRewardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryValidatorOutstandingRewardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryValidatorOutstandingRewardResponse.Merge(m, src)
}
func (m *QueryValidatorOutstandingRewardResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryValidatorOutstandingRewardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryValidatorOutstandingRewardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryValidatorOutstandingRewardResponse proto.InternalMessageInfo

func (m *QueryValidatorOutstandingRewardResponse) GetReward() types.DecCoin {
	if m != nil {
		return m.Reward
	}
	return types.DecCoin{}
}

func init() {
	proto.RegisterType((*QueryContractAddressRequest)(nil), "confio.poe.v1beta1.QueryContractAddressRequest")
	proto.RegisterType((*QueryContractAddressResponse)(nil), "confio.poe.v1beta1.QueryContractAddressResponse")
	proto.RegisterType((*QueryUnbondingPeriodRequest)(nil), "confio.poe.v1beta1.QueryUnbondingPeriodRequest")
	proto.RegisterType((*QueryUnbondingPeriodResponse)(nil), "confio.poe.v1beta1.QueryUnbondingPeriodResponse")
	proto.RegisterType((*QueryValidatorDelegationRequest)(nil), "confio.poe.v1beta1.QueryValidatorDelegationRequest")
	proto.RegisterType((*QueryValidatorDelegationResponse)(nil), "confio.poe.v1beta1.QueryValidatorDelegationResponse")
	proto.RegisterType((*QueryValidatorUnbondingDelegationsRequest)(nil), "confio.poe.v1beta1.QueryValidatorUnbondingDelegationsRequest")
	proto.RegisterType((*QueryValidatorUnbondingDelegationsResponse)(nil), "confio.poe.v1beta1.QueryValidatorUnbondingDelegationsResponse")
	proto.RegisterType((*QueryValidatorOutstandingRewardRequest)(nil), "confio.poe.v1beta1.QueryValidatorOutstandingRewardRequest")
	proto.RegisterType((*QueryValidatorOutstandingRewardResponse)(nil), "confio.poe.v1beta1.QueryValidatorOutstandingRewardResponse")
}

func init() { proto.RegisterFile("confio/poe/v1beta1/query.proto", fileDescriptor_55a2242dcc0e0cfb) }

var fileDescriptor_55a2242dcc0e0cfb = []byte{
	// 958 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x96, 0xcb, 0x6f, 0xdc, 0x44,
	0x18, 0xc0, 0x77, 0x4a, 0x69, 0xda, 0x09, 0x49, 0x61, 0xe0, 0x10, 0x96, 0xc4, 0x1b, 0x99, 0x36,
	0x2d, 0x81, 0x7a, 0x9a, 0x4d, 0xa5, 0x42, 0x80, 0x4a, 0xe4, 0x41, 0xc3, 0x01, 0x11, 0x56, 0x14,
	0x24, 0x24, 0xb4, 0x9a, 0xb5, 0x27, 0xce, 0xa8, 0x9b, 0x19, 0xc7, 0x33, 0x1b, 0x58, 0x45, 0xb9,
	0x70, 0xe2, 0x88, 0x84, 0x90, 0x10, 0x5c, 0x2a, 0xc1, 0xa9, 0x17, 0xfe, 0x09, 0x24, 0x7a, 0xac,
	0xc4, 0x85, 0x53, 0x5b, 0x25, 0x3d, 0x70, 0xe1, 0xc2, 0x5f, 0x80, 0x3c, 0x9e, 0xb1, 0xd7, 0xad,
	0xbd, 0xd9, 0xa4, 0xa7, 0xdd, 0x99, 0xef, 0xf5, 0xfb, 0x1e, 0xfe, 0x6c, 0xe8, 0xf8, 0x82, 0x6f,
	0x32, 0x81, 0x23, 0x41, 0xf1, 0xee, 0x42, 0x87, 0x2a, 0xb2, 0x80, 0x77, 0x7a, 0x34, 0xee, 0x7b,
	0x51, 0x2c, 0x94, 0x40, 0x28, 0x95, 0x7b, 0x91, 0xa0, 0x9e, 0x91, 0xd7, 0xe7, 0x7d, 0x21, 0xb7,
	0x85, 0xc4, 0x1d, 0x22, 0x69, 0xaa, 0x9c, 0x99, 0x46, 0x24, 0x64, 0x9c, 0x28, 0x26, 0x78, 0x6a,
	0x5f, 0x7f, 0x25, 0x14, 0xa1, 0xd0, 0x7f, 0x71, 0xf2, 0xcf, 0xdc, 0x3a, 0xa1, 0x10, 0x61, 0x97,
	0x62, 0x7d, 0xea, 0xf4, 0x36, 0x71, 0xd0, 0x8b, 0x07, 0xad, 0xa6, 0x8d, 0x9c, 0x44, 0x0c, 0x13,
	0xce, 0x85, 0xd2, 0x42, 0x69, 0xa5, 0x25, 0xcc, 0x09, 0x9f, 0xf1, 0x3d, 0x48, 0x67, 0xc5, 0xbe,
	0x60, 0xd6, 0xf7, 0x05, 0x23, 0x97, 0x8a, 0xdc, 0x66, 0x3c, 0xcc, 0x54, 0xcc, 0xd9, 0x68, 0xb9,
	0x15, 0x5a, 0x03, 0xb5, 0x71, 0x77, 0xe0, 0x6b, 0x9f, 0x26, 0xc7, 0x15, 0xc1, 0x55, 0x4c, 0x7c,
	0xf5, 0x41, 0x10, 0xc4, 0x54, 0xca, 0x16, 0xdd, 0xe9, 0x51, 0xa9, 0xd0, 0x3a, 0x9c, 0xf0, 0x8d,
	0xa4, 0xad, 0xfa, 0x11, 0x9d, 0x02, 0xb3, 0xe0, 0xf2, 0x64, 0xf3, 0x75, 0xef, 0xe9, 0x92, 0x7a,
	0x1b, 0x62, 0xcd, 0x7a, 0xf9, 0xac, 0x1f, 0xd1, 0xd6, 0x0b, 0xfe, 0xc0, 0x69, 0xe9, 0xec, 0x77,
	0x77, 0x1a, 0xb5, 0x7f, 0xee, 0x34, 0x6a, 0xee, 0xdb, 0x70, 0xba, 0x3c, 0xa4, 0x8c, 0x04, 0x97,
	0x14, 0x4d, 0xc1, 0x31, 0x92, 0x5e, 0xe9, 0x68, 0xe7, 0x5a, 0xf6, 0xe8, 0xce, 0x18, 0xd8, 0x5b,
	0xbc, 0x23, 0x78, 0xc0, 0x78, 0xb8, 0x41, 0x63, 0x26, 0x02, 0x03, 0xeb, 0x7e, 0x61, 0x1c, 0x3f,
	0x25, 0x36, 0x8e, 0xaf, 0xc3, 0xd3, 0x8a, 0x6d, 0xa7, 0x39, 0x8c, 0x37, 0x5f, 0xf5, 0xd2, 0x06,
	0x79, 0xb6, 0x81, 0xde, 0xaa, 0x69, 0xe0, 0xf2, 0xd9, 0x7b, 0x0f, 0x1a, 0xb5, 0x9f, 0x1e, 0x36,
	0x40, 0x4b, 0x1b, 0xb8, 0xeb, 0xb0, 0xa1, 0x1d, 0x7f, 0x4e, 0xba, 0x2c, 0x20, 0x4a, 0xc4, 0xab,
	0xb4, 0x4b, 0x43, 0xad, 0x6b, 0x0b, 0x75, 0x11, 0x4e, 0xee, 0x5a, 0x69, 0x3b, 0xe1, 0x35, 0xec,
	0x13, 0xd9, 0x6d, 0x92, 0xa6, 0xfb, 0x15, 0x9c, 0xad, 0xf6, 0x64, 0x30, 0xdf, 0x81, 0x63, 0x1d,
	0xd2, 0x25, 0xdc, 0xcf, 0x49, 0xd3, 0x46, 0x7a, 0xc9, 0x38, 0x64, 0xe5, 0x5e, 0x11, 0x8c, 0x2f,
	0x9f, 0x4e, 0x48, 0x5b, 0x56, 0xdf, 0xfd, 0x19, 0xc0, 0x37, 0x8a, 0xfe, 0xb3, 0x5a, 0xe4, 0x81,
	0xe4, 0xf1, 0x98, 0xd1, 0x87, 0x10, 0xe6, 0x8f, 0xc4, 0xd4, 0x29, 0x8d, 0x34, 0x57, 0x40, 0x4a,
	0x07, 0x2a, 0x9b, 0x03, 0x12, 0x52, 0x13, 0xa2, 0x35, 0x60, 0xe9, 0xfe, 0x09, 0xe0, 0xfc, 0x28,
	0x70, 0xa6, 0x0c, 0x1b, 0x70, 0x8c, 0x72, 0x15, 0x33, 0x9a, 0x8c, 0xc1, 0x73, 0x97, 0xc7, 0x9b,
	0x57, 0x6d, 0x4c, 0x3b, 0xe5, 0x36, 0x60, 0x89, 0x9b, 0x35, 0xae, 0xe2, 0xbe, 0xad, 0x8e, 0x71,
	0x83, 0x6e, 0x96, 0x24, 0x72, 0xe9, 0xc8, 0x44, 0x52, 0x9c, 0x42, 0x26, 0xb7, 0xe0, 0x5c, 0x31,
	0x91, 0x4f, 0x7a, 0x4a, 0x2a, 0xa2, 0x19, 0x5a, 0xf4, 0x6b, 0x12, 0xdb, 0x91, 0x44, 0x6f, 0xc2,
	0x97, 0x8a, 0x25, 0xce, 0xa7, 0xfa, 0xc5, 0x42, 0x95, 0x93, 0xf1, 0xfe, 0x0d, 0xc0, 0x4b, 0x47,
	0xfa, 0x35, 0xd5, 0xe9, 0xc3, 0x33, 0xb1, 0xbe, 0x31, 0x33, 0x32, 0x5d, 0x3a, 0x23, 0xab, 0xd4,
	0xd7, 0x63, 0xb2, 0x92, 0x14, 0xe2, 0xbf, 0x07, 0x8d, 0x89, 0x3e, 0xd9, 0xee, 0x2e, 0xb9, 0xa9,
	0xa5, 0x7b, 0xf7, 0x61, 0x63, 0x3e, 0x64, 0x6a, 0xab, 0xd7, 0xf1, 0x7c, 0xb1, 0x8d, 0xcd, 0xb6,
	0x48, 0x7f, 0xae, 0xc8, 0xe0, 0x36, 0x4e, 0x9e, 0x78, 0x69, 0x9d, 0xb4, 0x4c, 0xc0, 0xe6, 0xa3,
	0x71, 0xf8, 0xbc, 0xc6, 0x44, 0x77, 0x01, 0x3c, 0xff, 0xc4, 0x53, 0x8c, 0x70, 0xd9, 0x6a, 0x18,
	0xb2, 0x62, 0xea, 0x57, 0x47, 0x37, 0x48, 0x73, 0x77, 0xaf, 0x7d, 0xfb, 0xd7, 0xe3, 0x1f, 0x4e,
	0x79, 0xe8, 0x2d, 0xac, 0xc2, 0x98, 0x04, 0xb4, 0xb0, 0x44, 0xed, 0xd2, 0xc1, 0x7b, 0x85, 0xc5,
	0xb5, 0x8f, 0x7e, 0x04, 0x10, 0x66, 0x85, 0x95, 0xc8, 0xab, 0x9a, 0xa6, 0x62, 0x07, 0x32, 0x4c,
	0x3c, 0xb2, 0xbe, 0xa1, 0x9c, 0xd3, 0x94, 0xb3, 0xc8, 0x29, 0xa3, 0xdc, 0xcd, 0x41, 0x7e, 0x05,
	0xf0, 0x5c, 0x66, 0x8e, 0xae, 0x8c, 0x16, 0xc6, 0x52, 0x79, 0xa3, 0xaa, 0x1b, 0xa8, 0xeb, 0x1a,
	0x6a, 0x01, 0xe1, 0xe1, 0x50, 0x78, 0xaf, 0x38, 0xb5, 0xfb, 0xe8, 0x17, 0x00, 0xcf, 0x3f, 0xb1,
	0x57, 0x87, 0xb4, 0xba, 0x7c, 0x41, 0x0f, 0x69, 0x75, 0xc5, 0xca, 0x76, 0x2f, 0x6a, 0xde, 0x06,
	0x9a, 0x29, 0xe3, 0xed, 0x59, 0x23, 0xf4, 0x07, 0x80, 0x2f, 0x97, 0xac, 0x54, 0xb4, 0x58, 0x19,
	0xb0, 0x7a, 0x95, 0xd7, 0xaf, 0x1d, 0xcf, 0xc8, 0x90, 0x2e, 0x6b, 0xd2, 0xf7, 0xd0, 0x92, 0x46,
	0x34, 0xb4, 0x23, 0x54, 0x16, 0x07, 0x39, 0xee, 0xbf, 0x00, 0xce, 0x0c, 0x5d, 0x8e, 0xe8, 0xfd,
	0xa3, 0xd9, 0x86, 0x6c, 0xfc, 0xfa, 0x8d, 0x93, 0x9a, 0x9b, 0x24, 0x3f, 0xd6, 0x49, 0xde, 0x44,
	0x6b, 0xc7, 0x1c, 0x9f, 0xbc, 0x55, 0xed, 0x60, 0x20, 0x9b, 0xdf, 0x01, 0x9c, 0x5c, 0x67, 0x52,
	0x89, 0x98, 0xf9, 0xa4, 0xfb, 0x11, 0xdf, 0x14, 0xa8, 0x39, 0x74, 0xa0, 0x8b, 0xca, 0x36, 0xab,
	0xc5, 0x63, 0xd9, 0x8c, 0xb2, 0x44, 0xb6, 0x32, 0x9b, 0x36, 0xe3, 0x9b, 0x02, 0xef, 0x6d, 0x51,
	0x16, 0x6e, 0xa9, 0x7d, 0xf4, 0x18, 0xc0, 0x7a, 0xf5, 0x76, 0x46, 0x4b, 0x47, 0xd7, 0xb7, 0xea,
	0x55, 0x51, 0x7f, 0xf7, 0x44, 0xb6, 0xcf, 0xd6, 0x18, 0x2a, 0xe5, 0x3e, 0x16, 0xb9, 0xd7, 0x76,
	0xba, 0xe2, 0x97, 0x6f, 0xdc, 0x3b, 0x70, 0xc0, 0xfd, 0x03, 0x07, 0x3c, 0x3a, 0x70, 0xc0, 0xf7,
	0x87, 0x4e, 0xed, 0xfe, 0xa1, 0x53, 0xfb, 0xfb, 0xd0, 0xa9, 0x7d, 0x79, 0xa1, 0xf0, 0xc2, 0xd0,
	0x9f, 0xb0, 0x26, 0xe2, 0x37, 0xe9, 0xe0, 0x27, 0xaf, 0x8c, 0xce, 0x19, 0xfd, 0x4d, 0xb5, 0xf8,
	0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x27, 0x85, 0xfe, 0x9a, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	// ContractAddress queries the address for one of the PoE contracts
	ContractAddress(ctx context.Context, in *QueryContractAddressRequest, opts ...grpc.CallOption) (*QueryContractAddressResponse, error)
	// Validators queries all validators that match the given status.
	Validators(ctx context.Context, in *types1.QueryValidatorsRequest, opts ...grpc.CallOption) (*types1.QueryValidatorsResponse, error)
	// Validator queries validator info for given validator address.
	Validator(ctx context.Context, in *types1.QueryValidatorRequest, opts ...grpc.CallOption) (*types1.QueryValidatorResponse, error)
	// Validator queries validator info for given validator address.
	UnbondingPeriod(ctx context.Context, in *QueryUnbondingPeriodRequest, opts ...grpc.CallOption) (*QueryUnbondingPeriodResponse, error)
	// ValidatorDelegation queries self delegated amount for given validator.
	ValidatorDelegation(ctx context.Context, in *QueryValidatorDelegationRequest, opts ...grpc.CallOption) (*QueryValidatorDelegationResponse, error)
	// ValidatorUnbondingDelegations queries unbonding delegations of a validator.
	ValidatorUnbondingDelegations(ctx context.Context, in *QueryValidatorUnbondingDelegationsRequest, opts ...grpc.CallOption) (*QueryValidatorUnbondingDelegationsResponse, error)
	// HistoricalInfo queries the historical info for given height.
	HistoricalInfo(ctx context.Context, in *types1.QueryHistoricalInfoRequest, opts ...grpc.CallOption) (*types1.QueryHistoricalInfoResponse, error)
	// ValidatorOutstandingRewards queries rewards of a validator address.
	ValidatorOutstandingReward(ctx context.Context, in *QueryValidatorOutstandingRewardRequest, opts ...grpc.CallOption) (*QueryValidatorOutstandingRewardResponse, error)
}

type queryClient struct {
	cc grpc1.ClientConn
}

func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) ContractAddress(ctx context.Context, in *QueryContractAddressRequest, opts ...grpc.CallOption) (*QueryContractAddressResponse, error) {
	out := new(QueryContractAddressResponse)
	err := c.cc.Invoke(ctx, "/confio.poe.v1beta1.Query/ContractAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) Validators(ctx context.Context, in *types1.QueryValidatorsRequest, opts ...grpc.CallOption) (*types1.QueryValidatorsResponse, error) {
	out := new(types1.QueryValidatorsResponse)
	err := c.cc.Invoke(ctx, "/confio.poe.v1beta1.Query/Validators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) Validator(ctx context.Context, in *types1.QueryValidatorRequest, opts ...grpc.CallOption) (*types1.QueryValidatorResponse, error) {
	out := new(types1.QueryValidatorResponse)
	err := c.cc.Invoke(ctx, "/confio.poe.v1beta1.Query/Validator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) UnbondingPeriod(ctx context.Context, in *QueryUnbondingPeriodRequest, opts ...grpc.CallOption) (*QueryUnbondingPeriodResponse, error) {
	out := new(QueryUnbondingPeriodResponse)
	err := c.cc.Invoke(ctx, "/confio.poe.v1beta1.Query/UnbondingPeriod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) ValidatorDelegation(ctx context.Context, in *QueryValidatorDelegationRequest, opts ...grpc.CallOption) (*QueryValidatorDelegationResponse, error) {
	out := new(QueryValidatorDelegationResponse)
	err := c.cc.Invoke(ctx, "/confio.poe.v1beta1.Query/ValidatorDelegation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) ValidatorUnbondingDelegations(ctx context.Context, in *QueryValidatorUnbondingDelegationsRequest, opts ...grpc.CallOption) (*QueryValidatorUnbondingDelegationsResponse, error) {
	out := new(QueryValidatorUnbondingDelegationsResponse)
	err := c.cc.Invoke(ctx, "/confio.poe.v1beta1.Query/ValidatorUnbondingDelegations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) HistoricalInfo(ctx context.Context, in *types1.QueryHistoricalInfoRequest, opts ...grpc.CallOption) (*types1.QueryHistoricalInfoResponse, error) {
	out := new(types1.QueryHistoricalInfoResponse)
	err := c.cc.Invoke(ctx, "/confio.poe.v1beta1.Query/HistoricalInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) ValidatorOutstandingReward(ctx context.Context, in *QueryValidatorOutstandingRewardRequest, opts ...grpc.CallOption) (*QueryValidatorOutstandingRewardResponse, error) {
	out := new(QueryValidatorOutstandingRewardResponse)
	err := c.cc.Invoke(ctx, "/confio.poe.v1beta1.Query/ValidatorOutstandingReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	// ContractAddress queries the address for one of the PoE contracts
	ContractAddress(context.Context, *QueryContractAddressRequest) (*QueryContractAddressResponse, error)
	// Validators queries all validators that match the given status.
	Validators(context.Context, *types1.QueryValidatorsRequest) (*types1.QueryValidatorsResponse, error)
	// Validator queries validator info for given validator address.
	Validator(context.Context, *types1.QueryValidatorRequest) (*types1.QueryValidatorResponse, error)
	// Validator queries validator info for given validator address.
	UnbondingPeriod(context.Context, *QueryUnbondingPeriodRequest) (*QueryUnbondingPeriodResponse, error)
	// ValidatorDelegation queries self delegated amount for given validator.
	ValidatorDelegation(context.Context, *QueryValidatorDelegationRequest) (*QueryValidatorDelegationResponse, error)
	// ValidatorUnbondingDelegations queries unbonding delegations of a validator.
	ValidatorUnbondingDelegations(context.Context, *QueryValidatorUnbondingDelegationsRequest) (*QueryValidatorUnbondingDelegationsResponse, error)
	// HistoricalInfo queries the historical info for given height.
	HistoricalInfo(context.Context, *types1.QueryHistoricalInfoRequest) (*types1.QueryHistoricalInfoResponse, error)
	// ValidatorOutstandingRewards queries rewards of a validator address.
	ValidatorOutstandingReward(context.Context, *QueryValidatorOutstandingRewardRequest) (*QueryValidatorOutstandingRewardResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) ContractAddress(ctx context.Context, req *QueryContractAddressRequest) (*QueryContractAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractAddress not implemented")
}
func (*UnimplementedQueryServer) Validators(ctx context.Context, req *types1.QueryValidatorsRequest) (*types1.QueryValidatorsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Validators not implemented")
}
func (*UnimplementedQueryServer) Validator(ctx context.Context, req *types1.QueryValidatorRequest) (*types1.QueryValidatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Validator not implemented")
}
func (*UnimplementedQueryServer) UnbondingPeriod(ctx context.Context, req *QueryUnbondingPeriodRequest) (*QueryUnbondingPeriodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnbondingPeriod not implemented")
}
func (*UnimplementedQueryServer) ValidatorDelegation(ctx context.Context, req *QueryValidatorDelegationRequest) (*QueryValidatorDelegationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidatorDelegation not implemented")
}
func (*UnimplementedQueryServer) ValidatorUnbondingDelegations(ctx context.Context, req *QueryValidatorUnbondingDelegationsRequest) (*QueryValidatorUnbondingDelegationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidatorUnbondingDelegations not implemented")
}
func (*UnimplementedQueryServer) HistoricalInfo(ctx context.Context, req *types1.QueryHistoricalInfoRequest) (*types1.QueryHistoricalInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HistoricalInfo not implemented")
}
func (*UnimplementedQueryServer) ValidatorOutstandingReward(ctx context.Context, req *QueryValidatorOutstandingRewardRequest) (*QueryValidatorOutstandingRewardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidatorOutstandingReward not implemented")
}

func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_ContractAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryContractAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).ContractAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/confio.poe.v1beta1.Query/ContractAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).ContractAddress(ctx, req.(*QueryContractAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_Validators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types1.QueryValidatorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Validators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/confio.poe.v1beta1.Query/Validators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Validators(ctx, req.(*types1.QueryValidatorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_Validator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types1.QueryValidatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Validator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/confio.poe.v1beta1.Query/Validator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Validator(ctx, req.(*types1.QueryValidatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_UnbondingPeriod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryUnbondingPeriodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).UnbondingPeriod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/confio.poe.v1beta1.Query/UnbondingPeriod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).UnbondingPeriod(ctx, req.(*QueryUnbondingPeriodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_ValidatorDelegation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryValidatorDelegationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).ValidatorDelegation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/confio.poe.v1beta1.Query/ValidatorDelegation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).ValidatorDelegation(ctx, req.(*QueryValidatorDelegationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_ValidatorUnbondingDelegations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryValidatorUnbondingDelegationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).ValidatorUnbondingDelegations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/confio.poe.v1beta1.Query/ValidatorUnbondingDelegations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).ValidatorUnbondingDelegations(ctx, req.(*QueryValidatorUnbondingDelegationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_HistoricalInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types1.QueryHistoricalInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).HistoricalInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/confio.poe.v1beta1.Query/HistoricalInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).HistoricalInfo(ctx, req.(*types1.QueryHistoricalInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_ValidatorOutstandingReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryValidatorOutstandingRewardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).ValidatorOutstandingReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/confio.poe.v1beta1.Query/ValidatorOutstandingReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).ValidatorOutstandingReward(ctx, req.(*QueryValidatorOutstandingRewardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "confio.poe.v1beta1.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ContractAddress",
			Handler:    _Query_ContractAddress_Handler,
		},
		{
			MethodName: "Validators",
			Handler:    _Query_Validators_Handler,
		},
		{
			MethodName: "Validator",
			Handler:    _Query_Validator_Handler,
		},
		{
			MethodName: "UnbondingPeriod",
			Handler:    _Query_UnbondingPeriod_Handler,
		},
		{
			MethodName: "ValidatorDelegation",
			Handler:    _Query_ValidatorDelegation_Handler,
		},
		{
			MethodName: "ValidatorUnbondingDelegations",
			Handler:    _Query_ValidatorUnbondingDelegations_Handler,
		},
		{
			MethodName: "HistoricalInfo",
			Handler:    _Query_HistoricalInfo_Handler,
		},
		{
			MethodName: "ValidatorOutstandingReward",
			Handler:    _Query_ValidatorOutstandingReward_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "confio/poe/v1beta1/query.proto",
}

func (m *QueryContractAddressRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryContractAddressRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryContractAddressRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ContractType != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.ContractType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryContractAddressResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryContractAddressResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryContractAddressResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryUnbondingPeriodRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryUnbondingPeriodRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryUnbondingPeriodRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryUnbondingPeriodResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryUnbondingPeriodResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryUnbondingPeriodResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n1, err1 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.Time, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.Time):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintQuery(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryValidatorDelegationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryValidatorDelegationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryValidatorDelegationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ValidatorAddr) > 0 {
		i -= len(m.ValidatorAddr)
		copy(dAtA[i:], m.ValidatorAddr)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.ValidatorAddr)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryValidatorDelegationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryValidatorDelegationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryValidatorDelegationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Balance.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryValidatorUnbondingDelegationsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryValidatorUnbondingDelegationsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryValidatorUnbondingDelegationsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.ValidatorAddr) > 0 {
		i -= len(m.ValidatorAddr)
		copy(dAtA[i:], m.ValidatorAddr)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.ValidatorAddr)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryValidatorUnbondingDelegationsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryValidatorUnbondingDelegationsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryValidatorUnbondingDelegationsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Entries) > 0 {
		for iNdEx := len(m.Entries) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entries[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryValidatorOutstandingRewardRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryValidatorOutstandingRewardRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryValidatorOutstandingRewardRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ValidatorAddress) > 0 {
		i -= len(m.ValidatorAddress)
		copy(dAtA[i:], m.ValidatorAddress)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.ValidatorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryValidatorOutstandingRewardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryValidatorOutstandingRewardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryValidatorOutstandingRewardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Reward.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryContractAddressRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ContractType != 0 {
		n += 1 + sovQuery(uint64(m.ContractType))
	}
	return n
}

func (m *QueryContractAddressResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryUnbondingPeriodRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryUnbondingPeriodResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.Time)
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryValidatorDelegationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ValidatorAddr)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryValidatorDelegationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Balance.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryValidatorUnbondingDelegationsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ValidatorAddr)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryValidatorUnbondingDelegationsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Entries) > 0 {
		for _, e := range m.Entries {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryValidatorOutstandingRewardRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ValidatorAddress)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryValidatorOutstandingRewardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Reward.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryContractAddressRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryContractAddressRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryContractAddressRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractType", wireType)
			}
			m.ContractType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ContractType |= PoEContractType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryContractAddressResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryContractAddressResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryContractAddressResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryUnbondingPeriodRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryUnbondingPeriodRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryUnbondingPeriodRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryUnbondingPeriodResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryUnbondingPeriodResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryUnbondingPeriodResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Time", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.Time, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryValidatorDelegationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryValidatorDelegationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryValidatorDelegationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ValidatorAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryValidatorDelegationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryValidatorDelegationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryValidatorDelegationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Balance", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Balance.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryValidatorUnbondingDelegationsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryValidatorUnbondingDelegationsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryValidatorUnbondingDelegationsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ValidatorAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryValidatorUnbondingDelegationsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryValidatorUnbondingDelegationsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryValidatorUnbondingDelegationsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entries = append(m.Entries, types1.UnbondingDelegationEntry{})
			if err := m.Entries[len(m.Entries)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryValidatorOutstandingRewardRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryValidatorOutstandingRewardRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryValidatorOutstandingRewardRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ValidatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryValidatorOutstandingRewardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryValidatorOutstandingRewardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryValidatorOutstandingRewardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reward", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Reward.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuery = fmt.Errorf("proto: unexpected end of group")
)
