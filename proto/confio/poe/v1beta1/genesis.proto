syntax = "proto3";
package confio.poe.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmwasm/wasm/v1/genesis.proto";
import "confio/poe/v1beta1/poe.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/confio/tgrade/x/poe/types";

// GenesisState - initial state of module
message GenesisState {

  // params defines all the parameter of the module
  Params params = 1 [ (gogoproto.nullable) = false ];

  // SeedContracts when enabled stores and instantiates the Proof of Engagement
  // contracts on the chain.
  bool seed_contracts = 2;

  // GenTxs defines the genesis transactions to create a validator.
  repeated bytes gen_txs = 3 [
    (gogoproto.casttype) = "encoding/json.RawMessage",
    (gogoproto.jsontag) = "gentxs",
    (gogoproto.moretags) = "yaml:\"gentxs\""
  ];

  // SystemAdminAddress single address that is set as admin for the PoE
  // contracts in seed mode.
  string system_admin_address = 4;

  // Contracts Poe contract addresses and types when used with state dump in non
  // seed mode.
  repeated PoEContract contracts = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "contracts,omitempty"
  ];

  // Engagement weighted members of the engagement group. Validators should be
  // in here.
  repeated TG4Member engagement = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "engagement,omitempty"
  ];

  StakeContractConfig stake_contract_config = 7
      [ (gogoproto.jsontag) = "stake_contract_config,omitempty" ];

  ValsetContractConfig valset_contract_config = 8
      [ (gogoproto.jsontag) = "valset_contract_config,omitempty" ];
  EngagementContractConfig engagement_contract_config = 9
      [ (gogoproto.jsontag) = "engagement_contract_config,omitempty" ];
  // BondDenom defines the bondable coin denomination.
  string bond_denom = 10 [ (gogoproto.moretags) = "yaml:\"bond_denom\"" ];
  OversightCommitteeContractConfig oversight_committee_contract_config = 11
      [ (gogoproto.jsontag) = "oversight_committee_contract_config,omitempty" ];
  CommunityPoolContractConfig community_pool_contract_config = 12
      [ (gogoproto.jsontag) = "community_pool_contract_config,omitempty" ];
  ValidatorVotingContractConfig validator_voting_contract_config = 13
      [ (gogoproto.jsontag) = "validator_voting_contract_config,omitempty" ];

  repeated string oversightCommunityMembers = 14 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "oversight_community_members,omitempty"
  ];
}

// StakeContractConfig initial setup config
message StakeContractConfig {
  uint64 min_bond = 1;
  uint64 tokens_per_point = 2;
  google.protobuf.Duration unbonding_period = 3
      [ (gogoproto.nullable) = false, (gogoproto.stdduration) = true ];
  uint32 claim_autoreturn_limit = 4;
}

// ValsetContractConfig initial setup config
message ValsetContractConfig {
  uint64 min_points = 1;
  uint32 max_validators = 2;
  google.protobuf.Duration epoch_length = 3
      [ (gogoproto.nullable) = false, (gogoproto.stdduration) = true ];
  cosmos.base.v1beta1.Coin epoch_reward = 4 [ (gogoproto.nullable) = false ];
  // Scaling is the factor to multiply cw4-group weights to produce the
  // Tendermint validator power
  uint32 scaling = 5;
  // FeePercentage is the percentage of total accumulated fees that is
  // subtracted from tokens minted as rewards. 50% by default. To disable this
  // feature just set it to 0 (which effectively means that fees don't affect
  // the per-epoch reward).
  string fee_percentage = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  // CommunityPoolRewardRation in percentage
  string community_pool_reward_ratio = 7 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  // EngagementRewardRatio reward ration in percentage for all
  string engagement_reward_ratio = 8 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  // ValidatorRewardRation in percentage for all
  string validator_reward_ratio = 9 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  // AutoUnjail if set to true, we will auto-unjail any validator after their
  // jailtime is over.
  bool auto_unjail = 10;

  // DoubleSignSlashRatio Validators who are caught double signing are jailed
  // forever and their bonded tokens are slashed based on this value.
  string double_sign_slash_ratio = 11 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
}

// EngagementContractConfig initial setup config
message EngagementContractConfig {
  google.protobuf.Duration halflife = 1
      [ (gogoproto.nullable) = false, (gogoproto.stdduration) = true ];
}

// OversightCommitteeContractConfig initial setup config for the trusted circle
message OversightCommitteeContractConfig {
  // Name of TRUSTED_CIRCLE
  string name = 1;
  // EscrowAmount The required escrow amount, in the default denom (utgd)
  cosmos.base.v1beta1.Coin escrow_amount = 2 [ (gogoproto.nullable) = false ];

  // VotingRules rules for the tally
  VotingRules voting_rules = 3 [ (gogoproto.nullable) = false ];

  // DenyListContractAddress is an optional cw4 contract with list of addresses
  // denied to be part of TrustedCircle
  string deny_list_contract_address = 4;
}

// CommunityPoolContractConfig initial setup config for the contract
message CommunityPoolContractConfig {
  // VotingRules rules for the tally
  VotingRules voting_rules = 1 [ (gogoproto.nullable) = false ];
}

// ValidatorVotingContractConfig CommunityPoolContractConfig
message ValidatorVotingContractConfig {
  // VotingRules rules for the tally
  VotingRules voting_rules = 1 [ (gogoproto.nullable) = false ];
}

// PoEContract address and type information
message PoEContract {
  // ContractType type.
  poe.v1beta1.PoEContractType contract_type = 1;
  // Address is the bech32 address string
  string address = 2;
}

// TG4Member member of the Engagement group.
message TG4Member {
  // Address is the bech32 address string
  string address = 1 [ (gogoproto.jsontag) = "address" ];
  uint64 points = 2 [ (gogoproto.jsontag) = "points" ];
}

// VotingRules contains configuration for the tally.
message VotingRules {
  // VotingPeriod Voting period in days
  uint32 voting_period = 1;
  // Quorum  voting quorum percentage (1-100)
  string quorum = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  // Threshold voting threshold percentage (50-100)
  string threshold = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  // AllowEndEarly If true, and absolute threshold and quorum are met, we can
  // end before voting period finished. (Recommended value: true, unless you
  // have special needs)
  bool allow_end_early = 4;
}
