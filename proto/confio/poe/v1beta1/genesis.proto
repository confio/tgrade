syntax = "proto3";
package confio.poe.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmwasm/wasm/v1/genesis.proto";
import "confio/poe/v1beta1/poe.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/confio/tgrade/x/poe/types";

// GenesisState - initial state of module
message GenesisState {

  // params defines all the parameter of the module
  Params params = 1 [ (gogoproto.nullable) = false ];

  // SeedContracts when enabled stores and instantiates the Proof of Engagement
  // contracts on the chain.
  bool seed_contracts = 2;

  // GenTxs defines the genesis transactions to create a validator.
  repeated bytes gen_txs = 3 [
    (gogoproto.casttype) = "encoding/json.RawMessage",
    (gogoproto.jsontag) = "gentxs",
    (gogoproto.moretags) = "yaml:\"gentxs\""
  ];

  // SystemAdminAddress single address that is set as admin for the PoE
  // contracts in seed mode.
  string system_admin_address = 4;

  // Contracts Poe contract addresses and types when used with state dump in non
  // seed mode.
  repeated PoEContract contracts = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "contracts,omitempty"
  ];

  // Engagement weighted members of the engagement group. Validators should be
  // in here.
  repeated TG4Member engagement = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "engagement,omitempty"
  ];

  StakeContractConfig stake_contract_config = 7
      [ (gogoproto.jsontag) = "stake_contract_config,omitempty" ];

  ValsetContractConfig valset_contract_config = 8
      [ (gogoproto.jsontag) = "valset_contract_config,omitempty" ];
  // BondDenom defines the bondable coin denomination.
  string bond_denom = 9 [ (gogoproto.moretags) = "yaml:\"bond_denom\"" ];
}

// StakeContractConfig initial setup config
message StakeContractConfig {
  uint64 min_bond = 1;
  uint64 tokens_per_weight = 2;
  google.protobuf.Duration unbonding_period = 3
      [ (gogoproto.nullable) = false, (gogoproto.stdduration) = true ];
  uint32 claim_autoreturn_limit = 4;
  uint32 pre_auths = 5;
}

// ValsetContractConfig initial setup config
message ValsetContractConfig {
  uint64 min_weight = 1;
  uint32 max_validators = 2;
  google.protobuf.Duration epoch_length = 3
      [ (gogoproto.nullable) = false, (gogoproto.stdduration) = true ];
  cosmos.base.v1beta1.Coin epoch_reward = 4 [ (gogoproto.nullable) = false ];
  uint32 scaling = 5;
  string fee_percentage = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
}

// PoEContract address and type information
message PoEContract {
  // ContractType type.
  poe.v1beta1.PoEContractType contract_type = 1;
  // Address is the bech32 address string
  string address = 2;
}

// TG4Member member of the Engagement group.
message TG4Member {
  // Address is the bech32 address string
  string address = 1 [ (gogoproto.jsontag) = "json" ];
  uint64 weight = 2 [ (gogoproto.jsontag) = "weight" ];
}
